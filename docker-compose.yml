
services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: go-backend
    ports:
      - "8080:8080"
    depends_on:
      - redis
      - kafka
    environment:
      DB_HOST: host.docker.internal
      DB_PORT: "3306"
      DB_USER: root
      DB_PASSWORD: 
      DB_NAME: exp4
      REDIS_ADDR: redis:6379
      KAFKA_BROKER: kafka:9092
    networks:
      - app-net

  frontend:
    image: nginx:alpine
    container_name: frontend
    ports:
      - "5000:80"
    volumes:
      - ./FrontEnd:/usr/share/nginx/html:ro
      - ./nginx.conf:/etc/nginx/nginx.conf
    networks:
      - app-net

  redis:
    image: redis:6
    container_name: redis
    environment:
      - REDIS_PASSWORD=12345678
    command: ["redis-server", "--requirepass", "12345678"]
    ports:
      - "6379:6379"
    networks:
      - app-net

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - app-net

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:19092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:19092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - app-net

networks:
  app-net:
